[{"path":"https://mathmarecol.github.io/utils4mme/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Jason D. Everett Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason D. Everett. Author, maintainer.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Everett J (2024). utils4mme: collection utilities developed Mathematical Marine Ecology Lab. R package version 0.0.4.","code":"@Manual{,   title = {utils4mme: A collection of utilities developed by and for the Mathematical Marine Ecology Lab},   author = {Jason D. Everett},   year = {2024},   note = {R package version 0.0.4}, }"},{"path":"https://mathmarecol.github.io/utils4mme/index.html","id":"utils4mme-","dir":"","previous_headings":"","what":"A collection of utilities developed by and for the Mathematical Marine Ecology Lab","title":"A collection of utilities developed by and for the Mathematical Marine Ecology Lab","text":"utilsmme collection utilities developed Mathematical Marine Ecology Lab (MME) University Queensland. intended use within lab facilitate ease code-sharing reducing amount repetitive code must maintained. authors package compiled functions maintain package, author individual functions indicated function help. functions package work users, many require access UQ Research Data Manager (RDM). funcations require UQ data, need download expand MME1DATA-Q1215/SpatialPlanning/SpatPlan_Data.zip. use utils4mme package defaults, expand file home directory (e.g. /Users/jason/SpatPlan_Data). can use location want, need specify location functions, per function help. Note: download 2GB, expanded data 35 GB size. need help subsetting data region due memory HD space constraints, contact developers. run memory problems, can try increasing amount HD space gdal allowed use. Sys.setenv(GDAL_MAX_BAND_COUNT = 120000)","code":""},{"path":"https://mathmarecol.github.io/utils4mme/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A collection of utilities developed by and for the Mathematical Marine Ecology Lab","text":"can install development version utils4mme :","code":"if (!require(remotes)) install.packages(\"remotes\") remotes::install_github(\"https://github.com/MathMarEcol/utils4mme\")"},{"path":"https://mathmarecol.github.io/utils4mme/reference/get_landMask.html","id":null,"dir":"Reference","previous_headings":"","what":"Very simple function to return a global land-sea mask. — get_landMask","title":"Very simple function to return a global land-sea mask. — get_landMask","text":"function uses rnaturalearth masking land. defaults 1 degree resolution can used changing nrow ncol.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/get_landMask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Very simple function to return a global land-sea mask. — get_landMask","text":"","code":"get_landMask(nrow = 180, ncol = 360, scale = \"large\")"},{"path":"https://mathmarecol.github.io/utils4mme/reference/get_landMask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Very simple function to return a global land-sea mask. — get_landMask","text":"nrow Number rows global raster ncol Number columns global raster scale scale data downloaded rnaturalearth.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/get_landMask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Very simple function to return a global land-sea mask. — get_landMask","text":"SpatRaster terra","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/get_landMask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Very simple function to return a global land-sea mask. — get_landMask","text":"","code":"r <- get_landMask(nrow = 180, ncol = 360, scale = \"large\")"},{"path":"https://mathmarecol.github.io/utils4mme/reference/harmonic.html","id":null,"dir":"Reference","previous_headings":"","what":"For use in models to create a circular predictor — harmonic","title":"For use in models to create a circular predictor — harmonic","text":"function use models create circular predictor","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/harmonic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For use in models to create a circular predictor — harmonic","text":"","code":"harmonic(theta, k = 4)"},{"path":"https://mathmarecol.github.io/utils4mme/reference/harmonic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For use in models to create a circular predictor — harmonic","text":"theta Paramter model radians k degrees freedom","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/harmonic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For use in models to create a circular predictor — harmonic","text":"harmonic function","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/harmonic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"For use in models to create a circular predictor — harmonic","text":"","code":"theta = 2 k = 1 df <- harmonic(theta = 2, k = 1)"},{"path":"https://mathmarecol.github.io/utils4mme/reference/longhurst.html","id":null,"dir":"Reference","previous_headings":"","what":"Longhurst Provinces — longhurst","title":"Longhurst Provinces — longhurst","text":"sf dataframe ","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/longhurst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longhurst Provinces — longhurst","text":"","code":"longhurst"},{"path":"https://mathmarecol.github.io/utils4mme/reference/longhurst.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Longhurst Provinces — longhurst","text":"longhurst data frame XXXX rows XXX columns:","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/longhurst.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Longhurst Provinces — longhurst","text":"\"XXXXXX\"","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_AquaMaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Code to reduce AquaMaps to our requested species and area. — match_AquaMaps","title":"Code to reduce AquaMaps to our requested species and area. — match_AquaMaps","text":"Code reduce AquaMaps requested species area.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_AquaMaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code to reduce AquaMaps to our requested species and area. — match_AquaMaps","text":"","code":"match_AquaMaps(   PlanUnits,   MinD = 0,   MaxD = 200,   Direc = file.path(\"~\", \"SpatPlan_Data\") )"},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_AquaMaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code to reduce AquaMaps to our requested species and area. — match_AquaMaps","text":"PlanUnits Planning Units sf object MinD minimum depth AquaMaps data MaxD maximum depth AquaMaps data Direc directory MME data stored. specified, default location assumed.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_AquaMaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code to reduce AquaMaps to our requested species and area. — match_AquaMaps","text":"sf object AquaMaps data","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_AquaMaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Code to reduce AquaMaps to our requested species and area. — match_AquaMaps","text":"","code":"if (FALSE) { CoralSea <- offshoredatr::get_area(\"Coral Sea\",                                    query_type = \"iho\",                                    mregions_column = \"name\") %>%   sf::st_transform(\"ESRI:54009\") %>%   sf::st_make_valid() Aust <- rnaturalearth::ne_countries(country = \"Australia\", returnclass = \"sf\") %>%   sf::st_transform(\"ESRI:54009\") %>%   sf::st_make_valid() PUs <- spatialplanr::splnr_get_PlanningUnits(CoralSea,                                              Aust,                                              CellArea = 10000,                                              Shape = \"hexagon\") ggplot2::ggplot() +   ggplot2::geom_sf(data = Aust, colour = \"blue\", fill = NA) +   ggplot2::geom_sf(data = PUs, colour = \"black\", fill = NA)  AQM <- match_AquaMaps(PUs, MinD = 0, MaxD = 200,                     Direc = file.path(\"~\", \"Nextcloud\", \"MME1DATA-Q1215\", \"SpatialLayers\"))  (gg <- spatialplanr::splnr_plot_featureNo(AQM, Aust)) }"},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_FishCost.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fisheries cost layer. — match_FishCost","title":"Get fisheries cost layer. — match_FishCost","text":"Get fisheries cost layer.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_FishCost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fisheries cost layer. — match_FishCost","text":"","code":"match_FishCost(   PlanUnits,   group = \"all\",   Direc = file.path(\"~\", \"SpatPlan_Data\") )"},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_FishCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fisheries cost layer. — match_FishCost","text":"PlanUnits Planning Units sf object group group fish analysis. moment options split \"pelagic\" \"\" Direc directory MME data stored. specified, default location assumed.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_FishCost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get fisheries cost layer. — match_FishCost","text":"sf dataframe fisheries cost planning unit.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_Longhurst.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Longhurst Provinces to spatial data — match_Longhurst","title":"Assign Longhurst Provinces to spatial data — match_Longhurst","text":"function assigns Longhurst province description spatial feature.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_Longhurst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Longhurst Provinces to spatial data — match_Longhurst","text":"","code":"match_Longhurst(df)"},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_Longhurst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Longhurst Provinces to spatial data — match_Longhurst","text":"df sf object matched longhurst","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_Longhurst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Longhurst Provinces to spatial data — match_Longhurst","text":"sf dataframe additional longhurst columns (ProvCode, ProvDescr)","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_Longhurst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Longhurst Provinces to spatial data — match_Longhurst","text":"","code":"df <- data.frame(lon = c(150, 160),                  lat = c(-32, -38)) %>%   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"EPSG:4326\") %>%   match_Longhurst()"},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_MEOW.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Spalding's Marine Ecoregions to spatial data — match_MEOW","title":"Assign Spalding's Marine Ecoregions to spatial data — match_MEOW","text":"function assigns Spalding's Marine Ecoregions description spatial feature.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_MEOW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Spalding's Marine Ecoregions to spatial data — match_MEOW","text":"","code":"match_MEOW(df)"},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_MEOW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Spalding's Marine Ecoregions to spatial data — match_MEOW","text":"df sf object matched longhurst","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_MEOW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Spalding's Marine Ecoregions to spatial data — match_MEOW","text":"sf dataframe additional MEOW columns (EcoRegion, Province, Realm LatZone)","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/match_MEOW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Spalding's Marine Ecoregions to spatial data — match_MEOW","text":"","code":"df <- data.frame(lon = c(150, 160),                  lat = c(-32, -38)) %>%   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"EPSG:4326\") %>%   match_MEOW()"},{"path":"https://mathmarecol.github.io/utils4mme/reference/meow.html","id":null,"dir":"Reference","previous_headings":"","what":"MEOW — meow","title":"MEOW — meow","text":"sf dataframe ","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/meow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MEOW — meow","text":"","code":"meow"},{"path":"https://mathmarecol.github.io/utils4mme/reference/meow.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MEOW — meow","text":"meow data frame XXXX rows XXX columns:","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/meow.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MEOW — meow","text":"\"XXXXXX\"","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://mathmarecol.github.io/utils4mme/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/untibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove nonsense attributes if we are working for speed and memory efficiency. — untibble","title":"Remove nonsense attributes if we are working for speed and memory efficiency. — untibble","text":"Written Bill Venables (CSIRO/UQ)","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/untibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove nonsense attributes if we are working for speed and memory efficiency. — untibble","text":"","code":"untibble(tibble)"},{"path":"https://mathmarecol.github.io/utils4mme/reference/untibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove nonsense attributes if we are working for speed and memory efficiency. — untibble","text":"tibble tibble converted data.frame","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/untibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove nonsense attributes if we are working for speed and memory efficiency. — untibble","text":"df stripped dataframe","code":""},{"path":"https://mathmarecol.github.io/utils4mme/reference/untibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove nonsense attributes if we are working for speed and memory efficiency. — untibble","text":"","code":"df <- tibble::tibble(x = c(1, 2), y = c(\"January\", \"February\")) %>%   untibble() class(df) #> [1] \"data.frame\""}]
